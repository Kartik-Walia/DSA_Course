A Queue is defined as a linear data structure that is open at both ends and operations are peformed in 
First In First Out (FIFO) order.

We define a queue to be a list in which all additions to the list are made at one end, and all deletions from 
the list are made at the other end.  
The element which is first pushed into the order, the delete operation is first performed on that.

We always push new entry from rear & pop from front.
insert/push -> Enqueue
pop -> Dequeue


CHARACTERISTIC OF QUEUE 
- Can handle multiple data.
- We can access both ends.
- Queues are fast & flexible.


IMPLEMENTATIONS OF QUEUE 
1. Array Implementation
    - array : for storing queue elements 
    - front : index where the first element is stored in the array representing the queue.
    - rear : index where the last element is stored in an array representing the queue.
    - size : size of array 

    All operations Enqueue, Dequeue, Front, isEmpty have time complexity O(1).


INPUT RESTRICTED QUEUE 
Inserting is allowed only at 1 side (rear)
Popping is allowed from both sides 
- push_back (Inserting from rear)
- pop_front (Popping from front)
- pop_back (Popping from rear)


OUTUT RESTRICTED QUEUE 
Inserting is allowed from both sides 
Popping is allowed onlt at 1 side (front)
- push_front (Inserting from front)
- push_back (Inserting from rear)
- pop_front (Popping from front)


DOUBLY ENDED QUEUE (DE_QUEUE)
Inserting & Popping both are allowed from both sides 
- push_front (Inserting from front)
- push_back (Inserting from rear)
- pop_front (Popping from front)
- pop_back (Popping from rear)

